{% if 'mx' in platform.lower() %}
    {% set routing_instance = 'routing-instance mgmt_junos'%}
{% else %}
    {% set routing_instance = ''%}
{% endif %}
system {

    host-name {{ inventory_hostname }};
    root-authentication {
        encrypted-password "{{ root_encrypted_password }}";
    }
    login {
        message "\n\n\n You are accessing a U.S. Government (USG) Information System (IS) that is\n provided for USG-authorized use only. \n\n By using this IS (which includes any device attached to this IS), you consent\n to the following conditions:\n\n -The USG routinely intercepts and monitors communications on this IS for purposes\n including, but not limited to, penetration testing, COMSEC monitoring, network\n operations and defense, personnel misconduct (PM), law enforcement (LE), and\n counterintelligence (CI) investigations.\n\n -At any time, the USG may inspect and seize data stored on this IS.\n\n -Communications using, or data stored on, this IS are not private, are subject\n to routine monitoring, interception, and search, and may be disclosed or used for\n any USG-authorized purpose.\n\n -This IS includes security measures (e.g., authentication and access controls)\n to protect USG interests--not for your personal benefit or privacy.\n\n -Notwithstanding the above, using this IS does not constitute consent to PM, LE\n or CI investigative searching or monitoring of the content of privileged\n communications, or work product, related to personal representation or services\n by attorneys, psychotherapists, or clergy, and their assistants. Such\n communications and work product are private and confidential. See User Agreement\n for details.\n\n";
        class super-user-local {
            idle-timeout 360;
            login-alarms;
            login-tip;
            permissions all;
        }
    {% for user in SSH %}
        user {{ user.ssh_user }} {
        {% if user.uid is defined and user.uid %}
            uid {{ user.uid }};
        {% endif %}
        {% if user.class is defined and user.class%}
            class {{ user.class }}
        {% else %}
            class super-user;
        {% endif %}
        {% if user.ssh_key is defined and user.ssh_key %}
            authentication {
                ssh-rsa "{{ user.ssh_key }}";
            }
        {% endif %}
        }
    {% endfor %}
    }
    {% if routing_instance|length %}
    management-instance;
    {% endif %}
    services {
        ssh {
            root-login allow;
        }
        netconf {
            ssh;
        }
    }
    syslog {
        user * {
            any emergency;
        }
        {% for server in syslog_server %}
            {% if server.server is defined and server.server %}
        host {{ server.server }} {
            any notice;
            authorization info;
            match "!(license)|(clear alarm)|(alarm cleared)";
            source-address {{ mgmt_ip_cidr.split('/')[0] }} {{ routing_instance }};
            {% if routing_instance|length %}
            {{ routing_instance }};
            {% endif %}
            explicit-priority;
                {% if server.port is defined and server.port %}
            port {{ server.port }};
                {% endif %}
        }
            {% endif %}
        {% endfor %}
        file messages {
            any notice;
            authorization info;
            match "!(license)";
        }                                   
        file interactive-commands {         
            interactive-commands any;       
        }                                   
        file default-log-messages {         
            any any;                        
            structured-data;                
        }  
    }
    authentication-order [ radius password ];
    radius-server {
        {% for server in radius_server %}
        {{ server.server }} {
            {% if routing_instance|length %}
            {{ routing_instance }};
            {% endif %}
            port {{ server.port }};
            secret {{ radius_password }};
            source-address {{ mgmt_ip_cidr.split('/')[0] }} {{ routing_instance }};
        }
        {% endfor %}
    }
    ddos-protection {
        protocols {
            arp {
                aggregate {
                    bandwidth 2000;
                }
            }
        }
    }
    ntp {
        {% for server in ntp_servers %}
        server {{ server}} {{ routing_instance }};
        {% endfor %}
        source-address {{ mgmt_ip_cidr.split('/')[0] }} {{ routing_instance }};
    }
}

